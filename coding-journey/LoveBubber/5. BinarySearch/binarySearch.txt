////////////////////////////////////////////////////////////////////////////////////////////
// First and last element of an Element in Sorted array

/*
2
6 3
0 5 5 6 6 6
8 2
0 0 1 1 2 2 2 2

Ans:
-1 -1
4 7

*/

/* #include <bits/stdc++.h>
using namespace std;

int binarySearchLeft(int arr[], int n, int key)
{
    int ans = -1;
    int start = 0, end = n - 1;
    int mid = start + (end - start) / 2;

    while (start <= end)
    {
        if (arr[mid] == key)
        {
            ans = mid;
            end = mid - 1;
        }

        else if (key > arr[mid])
        {
            start = mid + 1;
        }
        else if (key < arr[mid])
        {
            end = mid - 1;
        }
        mid = start + (end - start) / 2;
    }
    return ans;
}

int binarySearchRight(int arr[], int n, int key)
{
    int ans = -1;
    int start = 0, end = n - 1;

    while (start <= end)
    {
        int mid = start + (end - start) / 2;

        if (arr[mid] == key)
        {
            ans = mid;
            start = mid + 1;
        }

        else if (key > arr[mid])
        {
            start = mid + 1;
        }
        else if (key < arr[mid])
        {
            end = mid - 1;
        }
    }
    return ans;
}

int main()
{
    int n = 4;
    int arr[] = {0, 0, 0, 0};
    int key = 0;
    cout << binarySearchLeft(arr, n, key) << " " << binarySearchRight(arr, n, key) << endl;
    return 0;
} */

/*
    Trick: mid = start + (end-start)/2


// Aditye verma
bs1. Binary Search
bs2. Binary Search in reverse Sorted array
bs3. Order Not search
bs4. First and Last occurrence
bs5. count of element in sorted array
bs6. find No. of times sorted rotated array
bs7. Find element in rotated array
bs8. Searching in nearly sorted array
bs9. Find floor of sorted array
bs10. Find ceil of sorted array
bs11. Find next alphabetical element
bs12. Find the position of an element in infinite sorted array (interview type question)
bs13. index of 1 in binary infinite sorted array   (interview type question)
bs14. Mini difference element of sorted array with k   
bs15. Find maximum element in Botonic Array
bs16. Search in Row wise and column wise sorted array
bs17. Allocate minimum number of pages


// love Babbar

1. Binary search
2. First and last occurrence
3. count of element in sorted array
4. Peak index in mountain array
5. Pivot element (minimum element in rotated sorted array)
6. element in rotated sorted array
7. Square root of using binary search array

// most important questions
Question Links:
- Book Allocation Problem: https://bit.ly/3GiCqY0
- Aggressive Cows: https://bit.ly/3dkuQ2B
- Painter Partition Problem: https://bit.ly/31v3Jiy
- EKO SPOJ: https://www.spoj.com/problems/EKO/
- PRATA SPOJ: https://bit.ly/3ExHXt5


Questions:
        - Lower Bound (first Occurrence)
        - Upper Bound (last Occurrence)
        - Number of occurrence
        - Pivot
        - Rotated search
        - Search Space --> Agg cow, Roti, Paratha, book allocation

    Homework Questions:
    - Painterâ€™s Partition Problem: https://bit.ly/31v3Jiy
    - EKO SPOJ: https://www.spoj.com/problems/EKO/
    - PRATA SPOJ: https://bit.ly/3ExHXt5
 */
